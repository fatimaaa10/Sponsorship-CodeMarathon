-- SQL VIEWS QUERIES

-- 1. Create a view that lists all matches along with their sponsors 
-- and the total payments received. 
-- Then, retrieve all matches where the total payments exceed $200,000.

CREATE VIEW v_match_payments AS
	SELECT 
	  m.MatchID,
	  m.MatchName,
	  s.SponsorName,
	  SUM(p.AmountPaid) AS TotalAmountPaid 
FROM 
  Matches m
  JOIN Contracts c ON m.MatchID = c.MatchID
  JOIN Sponsors s ON c.SponsorID = s.SponsorID
  JOIN Payments p ON c.ContractID = p.ContractID
GROUP BY 
  m.MatchID, m.MatchName, s.SponsorName;

SELECT * FROM v_match_payments WHERE TotalAmountPaid > 200000;

-- 2. Create a view that displays the contract details (ContractID, SponsorName, MatchName, ContractValue) 
-- and write a query to retrieve contracts with a value greater than the average contract value.

CREATE VIEW v_contractdetails AS
SELECT 
  c.ContractID,
  s.SponsorName,
  m.MatchName,
  c.ContractValue
FROM 
  Contracts c
  JOIN Sponsors s ON c.SponsorID = s.SponsorID
  JOIN Matches m ON c.MatchID = m.MatchID;

SELECT * FROM v_contractdetails WHERE ContractValue > (SELECT AVG(ContractValue) FROM Contracts);

-- 3. Create a view to display all pending payments for each sponsor 
-- and write a query to list the sponsors who have pending payments totaling more than $50,000.

CREATE VIEW v_pendingpayments AS
SELECT 
  s.SponsorName,
  SUM(c.ContractValue - COALESCE(p.TotalAmountPaid, 0)) AS PendingAmount
FROM 
  Sponsors s
  JOIN Contracts c ON s.SponsorID = c.SponsorID
  LEFT JOIN (SELECT ContractID, SUM(AmountPaid) AS 
	TotalAmountPaid FROM Payments GROUP BY ContractID) p 
	ON c.ContractID = p.ContractID
GROUP BY 
  s.SponsorName;

SELECT * FROM v_pendingpayments WHERE PendingAmount > 50000;

-- 4. Create a view that shows the number of matches each sponsor has sponsored. 
-- Then, write a query to find sponsors who have sponsored more than 2 matches.

CREATE VIEW v_sponsormatches AS
SELECT 
  s.SponsorName,
  COUNT(DISTINCT c.MatchID) AS NumberOfMatches
FROM 
  Sponsors s
  JOIN Contracts c ON s.SponsorID = c.SponsorID
GROUP BY 
  s.SponsorName;

SELECT * FROM v_sponsormatches WHERE NumberOfMatches > 2;

-- 5. Create a SQL view that provides a comprehensive overview of all sponsorship activities. 
-- The view should include the following details:

-- Sponsor Details:
-- Sponsor Name
-- Industry Type
-- Contact Email

CREATE VIEW v_sponsor_details AS
	SELECT SponsorName, IndustryType, ContactEmail 
	FROM Sponsors;

-- Match Details:
-- Match Name
-- Match Date
-- Location

CREATE VIEW v_match_details AS
	SELECT MatchName, MatchDate, Location
	FROM Matches;

-- Contract Details:
-- Contract Value
-- Contract Date

CREATE VIEW v_contract_details AS
	SELECT ContractValue, ContractDate
	FROM Contracts;

-- Payment Summary:
-- Total Amount Paid by the Sponsor
-- Number of Payments Made
-- Latest Payment Date

CREATE VIEW v_payment_summary AS
	SELECT ContractID,
	SUM(AmountPaid) AS TotalAmountPaid,
	COUNT(PaymentID) AS NumberOfPayments,
	MAX(PaymentDate) AS LatestPaymentDate
	FROM Payments
	GROUP BY ContractID;

-- Additional Requirements:
-- Only include sponsors who have made at least one payment.
-- Calculate the total amount paid by each sponsor for each match.
-- Include sponsors even if they have contracts but no completed payments, indicating their status with a Pending label in the PaymentStatus column.
-- Sort the results first by Sponsor Name and then by Match Date.

CREATE VIEW v_sponsorship_activities AS
	SELECT s.SponsorName,
	       s.IndustryType,
	       s.ContactEmail,
	       m.MatchName,
	       m.MatchDate,
	       m.Location,
	       c.ContractValue,
	       c.ContractDate,
	       vps.TotalAmountPaid,
	       vps.NumberOfPayments,
	       vps.LatestPaymentDate,
	CASE 
		WHEN vps.TotalAmountPaid IS NULL THEN 'Pending'
		ELSE 'Paid'
	END AS PaymentStatus
FROM Sponsors s
		LEFT JOIN Contracts c ON s.SponsorID = c.SponsorID
		LEFT JOIN Matches m ON c.MatchID = m.MatchID
		LEFT JOIN v_payment_summary vps ON c.ContractID = vps.ContractID
ORDER BY 
	s.SponsorName, m.MatchDate;

select * from v_sponsor_details;
select * from v_match_details;
select * from v_contract_details;
select * from v_payment_summary;
select * from v_sponsorship_activities;


	